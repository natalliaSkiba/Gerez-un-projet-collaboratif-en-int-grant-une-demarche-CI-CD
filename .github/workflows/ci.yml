name: CI Pipeline

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  backend:
    name: Backend tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: back
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run tests and SonarCloud analysis
        run: |
          mvn -X -B verify sonar:sonar \
            -Dsonar.projectKey=natalliaskiba_natalliaskiba-bobapp-back \
            -Dsonar.organization=natalliaskiba \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.token=$SONAR_TOKEN
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: SonarCloud Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          scanMetadataReportFile: back/target/sonar/report-task.txt
          pollingTimeoutSec: 600
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io

      - name: Archive backend coverage report
        uses: actions/upload-artifact@v4.6.2
        with:
          name: backend-coverage
          path: back/target/site/jacoco

  frontend:
    name: Frontend tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm ci

      - name: Run frontend tests
        run: npm run test -- --watch=false --no-progress --browsers=ChromeHeadless --code-coverage

      - name: Archive frontend coverage report
        uses: actions/upload-artifact@v4.6.2
        with:
          name: frontend-coverage
          path: front/coverage

      - name: SonarCloud Scan (frontend)
        uses: SonarSource/sonarqube-scan-action@v5.2.0
        with:
          projectBaseDir: front
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


  publish-back:
    name: Publish backend to Docker Hub
    needs: backend
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    defaults:
      run:
        working-directory: back
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image (backend)
        uses: docker/build-push-action@v5
        with:
          context: ./back
          file: ./back/Dockerfile
          push: true
          tags: nataskiba/bobapp-back:latest

  publish-front:
    name: Publish frontend to Docker Hub
    needs: frontend
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    defaults:
      run:
        working-directory: front
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image (frontend)
        uses: docker/build-push-action@v5
        with:
          context: ./front
          file: ./front/Dockerfile
          push: true
          tags: nataskiba/bobapp-front:latest

